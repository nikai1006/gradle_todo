group 'cn.net.nikai.gradle'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
configurations.all {
    resolutionStrategy {
//        failOnVersionConFlict()
        force 'org.slf4j:slf4j-api:1.7.3'
    }
}
repositories {
    mavenLocal()
    //本地仓库
    mavenCentral()//中央仓库
    maven { //自定义仓库
//        url 'https://repository.sonatype.org/'
        url 'http://nexus.juanpi.org/content/groups/public/'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3') {
//        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compile 'org.hibernate:hibernate-core:4.3.10.Final', 'org.springframework.ws:spring-ws-core:2.2.0.RELEASE', 'org.apache.commons:commons-csv:1.0'
    compile('org.springframework.boot:spring-boot:1.5.9.RELEASE') {
//        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
//    compile 'org.soil.mock:restclient:1.0.5'
}

def createDir = {
    path ->
        File dir = new File(path)
        if (!dir.exists())
            dir.mkdirs()

}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.apache.commons:commons-csv:1.0'
    }
}

//自定义任务
task makeJavaDir() {
    def paths = ['src/main/java', 'src/main/resources', 'src/test/java', 'src/test/resources']
    doFirst {
        paths.forEach(createDir)
    }
}

//自定义任务
task makeWebDir() {
    dependsOn 'makeJavaDir'
    def paths = ['src/main/webapp']
    doLast {
        paths.forEach(createDir)
    }
}

import org.apache.commons.csv.*

task printCSV() {
    doLast {
        def records = CSVFormat.EXCEL.parse(new FileReader('api.csv'))
        for (item in records) {
            print item.get(0) + ' '
            println item.get(1)
        }

    }
}